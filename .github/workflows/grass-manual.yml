name: GRASS GIS addon manual

on:
  push:
    branches: [ GRASSmanual ]

jobs:
  build-grass-manual:
    name: build-grass-manual
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apt-get update -qq && apt-get install -y -qq grass grass-dev grass-doc wget make
          mkdir public
          # some files are not installed properly, get them online
          (cd public && wget https://grass.osgeo.org/grass74/manuals/grass_logo.png)
          (cd public && wget https://grass.osgeo.org/grass74/manuals/grassdocs.css)
      - name: Create a temporary location (needed for v<7.6)
        run: |
          grass -c EPSG:4326 grasstmploc -e
      - name: Complile GRASS GIS addon
        run: |
          ADDON_NAME=$(${GITHUB_REPOSITORY} | cut -d "/" -f 2)
          echo ${ADDON_NAME}
          # expecting name of module is repository name
          grass grasstmploc/PERMANENT --exec g.extension extension=${ADDON_NAME} url=. prefix=build --verbose
      - name: Move manual to public folder
        run: |
          # put the compile documentation to the public directory
          # public name is convention for published web pages
          cp -r build/docs/html/* public/
          mv public/${ADDON_NAME}.html public/index.html
      - name: Reset URL
        run: |
          sed -i "s+<a href=\"\">${ADDON_NAME} source code</a>+<a href=\"https://github.com/${GITHUB_REPOSITORY}\">${ADDON_NAME} source code</a>+g" public/index.html
          sed -i "s+(<a href=\"\">history</a>)+(<a href=\"https://github.com/${GITHUB_REPOSITORY}/commits/main/\">history</a>)+g" public/index.html
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "public"
  deploy-grass-manual:
    nane: deploy-grass-manual
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-grass-manual

    permissions:
      pages: write
      id-token: write

    environment:
      # environment created automatically by GitHub
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2